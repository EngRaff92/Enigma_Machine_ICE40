/* Generated by Yosys 0.10+16 (git sha1 d8f6d7b18, x86_64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os) */

(* dynports =  1  *)
(* top =  1  *)
(* src = "../rtl/plugboard.sv:9.1-109.10" *)
module plugboard(input_letter, pb_cs_n, output_letter, error);
  (* src = "../rtl/plugboard.sv:0.0-0.0" *)
  wire [4:0] _00_;
  (* src = "../rtl/plugboard.sv:0.0-0.0" *)
  wire [5:0] _01_;
  (* src = "../rtl/plugboard.sv:0.0-0.0" *)
  wire [4:0] _02_;
  (* src = "../rtl/plugboard.sv:0.0-0.0" *)
  wire _03_;
  (* src = "../rtl/plugboard.sv:0.0-0.0" *)
  wire [4:0] _04_;
  (* src = "../rtl/plugboard.sv:0.0-0.0" *)
  wire [5:0] _05_;
  (* src = "../rtl/plugboard.sv:0.0-0.0" *)
  wire [4:0] _06_;
  (* src = "../rtl/plugboard.sv:0.0-0.0" *)
  wire _07_;
  (* src = "../rtl/plugboard.sv:67.22-67.64" *)
  wire _08_;
  (* src = "../rtl/plugboard.sv:72.12-72.33" *)
  wire _09_;
  (* src = "../rtl/plugboard.sv:67.23-67.35" *)
  wire _10_;
  (* src = "../rtl/plugboard.sv:67.40-67.63" *)
  wire _11_;
  (* src = "../rtl/plugboard.sv:66.24-66.51" *)
  wire _12_;
  (* src = "../rtl/plugboard.sv:56.23-56.31" *)
  wire [5:0] _13_;
  (* src = "../rtl/plugboard.sv:72.24-72.32" *)
  wire _14_;
  (* src = "../rtl/plugboard.sv:72.13-72.19" *)
  wire _15_;
  (* src = "../rtl/plugboard.sv:67.21-67.76" *)
  wire _16_;
  wire [4:0] _17_;
  wire _18_;
  wire [4:0] _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire [5:0] _23_;
  wire _24_;
  (* src = "../rtl/plugboard.sv:73.31-73.63" *)
  wire [4:0] _25_;
  (* src = "../rtl/plugboard.sv:47.25-47.32" *)
  wire [4:0] LUT_OUT;
  (* src = "../rtl/plugboard.sv:49.25-49.31" *)
  wire [5:0] Rvalue;
  (* src = "../rtl/plugboard.sv:22.33-22.38" *)
  output error;
  (* src = "../rtl/plugboard.sv:15.33-15.45" *)
  input [4:0] input_letter;
  (* src = "../rtl/plugboard.sv:19.33-19.46" *)
  output [4:0] output_letter;
  (* src = "../rtl/plugboard.sv:65.11-65.19" *)
  wire overflow;
  (* src = "../rtl/plugboard.sv:17.33-17.40" *)
  input pb_cs_n;
  (* src = "../rtl/plugboard.sv:48.25-48.32" *)
  wire plugged;
  (* src = "../rtl/plugboard.sv:41.23-41.31" *)
  reg [5:0] lut_plug [25:0];
  initial begin
    lut_plug[0] = 6'h00;
    lut_plug[1] = 6'h01;
    lut_plug[2] = 6'h02;
    lut_plug[3] = 6'h03;
    lut_plug[4] = 6'h04;
    lut_plug[5] = 6'h05;
    lut_plug[6] = 6'h06;
    lut_plug[7] = 6'h07;
    lut_plug[8] = 6'h08;
    lut_plug[9] = 6'h09;
    lut_plug[10] = 6'h0a;
    lut_plug[11] = 6'h0b;
    lut_plug[12] = 6'h0c;
    lut_plug[13] = 6'h0d;
    lut_plug[14] = 6'h0e;
    lut_plug[15] = 6'h0f;
    lut_plug[16] = 6'h10;
    lut_plug[17] = 6'h11;
    lut_plug[18] = 6'h12;
    lut_plug[19] = 6'h13;
    lut_plug[20] = 6'h14;
    lut_plug[21] = 6'h15;
    lut_plug[22] = 6'h16;
    lut_plug[23] = 6'h17;
    lut_plug[24] = 6'h18;
    lut_plug[25] = 6'h19;
  end
  assign _13_ = lut_plug[input_letter];
  assign _08_ = _10_ & (* src = "../rtl/plugboard.sv:67.22-67.64" *) _11_;
  assign _09_ = _15_ & (* src = "../rtl/plugboard.sv:72.12-72.33" *) _14_;
  assign _11_ = input_letter == (* src = "../rtl/plugboard.sv:67.40-67.63" *) LUT_OUT;
  assign _12_ = input_letter > (* src = "../rtl/plugboard.sv:66.24-66.51" *) 32'd26;
  assign _14_ = ~ (* src = "../rtl/plugboard.sv:72.24-72.32" *) pb_cs_n;
  assign _15_ = ~ (* src = "../rtl/plugboard.sv:72.13-72.19" *) error;
  assign _16_ = _08_ | (* src = "../rtl/plugboard.sv:67.21-67.76" *) overflow;
  assign _17_ = _18_ ? (* full_case = 32'd1 *) (* src = "../rtl/plugboard.sv:72.12-72.33|../rtl/plugboard.sv:72.9-75.35" *) _25_ : 5'h00;
  assign _19_ = _20_ ? (* full_case = 32'd1 *) (* src = "../rtl/plugboard.sv:51.12-51.20|../rtl/plugboard.sv:51.9-59.12" *) 5'h00 : _13_[4:0];
  assign _21_ = _22_ ? (* full_case = 32'd1 *) (* src = "../rtl/plugboard.sv:51.12-51.20|../rtl/plugboard.sv:51.9-59.12" *) 1'h0 : _13_[5];
  assign _23_ = _24_ ? (* full_case = 32'd1 *) (* src = "../rtl/plugboard.sv:51.12-51.20|../rtl/plugboard.sv:51.9-59.12" *) 6'h00 : _13_;
  assign _25_ = plugged ? (* src = "../rtl/plugboard.sv:73.31-73.63" *) LUT_OUT : input_letter;
  assign overflow = _12_;
  assign error = _16_;
  assign _02_ = _06_;
  assign _01_ = _05_;
  assign _03_ = _07_;
  assign _00_ = _04_;
  assign _18_ = _09_;
  assign _06_ = _17_;
  assign _20_ = overflow;
  assign _04_ = _19_;
  assign _22_ = overflow;
  assign _07_ = _21_;
  assign _24_ = overflow;
  assign _05_ = _23_;
  assign output_letter = _17_;
  assign LUT_OUT = _19_;
  assign plugged = _21_;
  assign Rvalue = _23_;
  assign _10_ = plugged;
endmodule
